{
	"id": "a908af31f3e87bbfee7f4dbd897d883f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"myProject/Asoll.sol": {
				"content": "// SPDX-License-Identifier: MIT \r\npragma solidity ^0.8.0;\r\n\r\n\r\n\r\ncontract A{\r\n  address payable public sender=payable(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4);\r\n\r\n  constructor()payable{}\r\n\r\n  function sendTorec()public {\r\n    sender.send(10);\r\n  }\r\n  function sendToTrans()public {\r\n    sender.transfer(10);\r\n  }\r\n    // function getResult(uint i)public pure returns(string memory){\r\n    //     return integerToString(i);\r\n    // }\r\n\r\n    // function integerToString(uint i) private pure returns(string memory){\r\n    //     if(i==0)\r\n    //         return \"0\";\r\n    //     uint j=i;\r\n    //     uint len;\r\n    //     while(j!=0){\r\n    //         len++;\r\n    //         j/=10;\r\n    //     }\r\n    //     bytes memory bstr=new bytes(len);\r\n    //     uint k=len-1;\r\n    //     while(i!=0){\r\n    //         bstr[k--]=bytes1(uint8(48+i%10));\r\n    //         i/=10;\r\n    //     }\r\n    //     string memory s=string(bstr);\r\n    //     return  s;\r\n    // }\r\n\r\n\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"myProject/Asoll.sol": {
				"A": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "sendToTrans",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sendTorec",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sender",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"myProject/Asoll.sol\":65:959  contract A{... */\n  mstore(0x40, 0x80)\n    /* \"myProject/Asoll.sol\":118:160  0x5B38Da6a701c568545dCfcB03FcB875f56beddC4 */\n  0x5b38da6a701c568545dcfcb03fcb875f56beddc4\n    /* \"myProject/Asoll.sol\":80:161  address payable public sender=payable(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"myProject/Asoll.sol\":65:959  contract A{... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"myProject/Asoll.sol\":65:959  contract A{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1a66376f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x67e404ce\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7d475234\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"myProject/Asoll.sol\":196:251  function sendTorec()public {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"myProject/Asoll.sol\":80:161  address payable public sender=payable(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4) */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"myProject/Asoll.sol\":255:316  function sendToTrans()public {... */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"myProject/Asoll.sol\":196:251  function sendTorec()public {... */\n    tag_7:\n        /* \"myProject/Asoll.sol\":230:236  sender */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"myProject/Asoll.sol\":230:241  sender.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"myProject/Asoll.sol\":230:245  sender.send(10) */\n      0x08fc\n        /* \"myProject/Asoll.sol\":242:244  10 */\n      0x0a\n        /* \"myProject/Asoll.sol\":230:245  sender.send(10) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"myProject/Asoll.sol\":196:251  function sendTorec()public {... */\n      jump\t// out\n        /* \"myProject/Asoll.sol\":80:161  address payable public sender=payable(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4) */\n    tag_9:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"myProject/Asoll.sol\":255:316  function sendToTrans()public {... */\n    tag_13:\n        /* \"myProject/Asoll.sol\":291:297  sender */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"myProject/Asoll.sol\":291:306  sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"myProject/Asoll.sol\":291:310  sender.transfer(10) */\n      0x08fc\n        /* \"myProject/Asoll.sol\":307:309  10 */\n      0x0a\n        /* \"myProject/Asoll.sol\":291:310  sender.transfer(10) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n        /* \"myProject/Asoll.sol\":255:316  function sendToTrans()public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_19:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:243   */\n    tag_20:\n        /* \"#utility.yul\":184:191   */\n      0x00\n        /* \"#utility.yul\":213:237   */\n      tag_25\n        /* \"#utility.yul\":231:236   */\n      dup3\n        /* \"#utility.yul\":213:237   */\n      tag_19\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":202:237   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":249:391   */\n    tag_21:\n        /* \"#utility.yul\":352:384   */\n      tag_27\n        /* \"#utility.yul\":378:383   */\n      dup2\n        /* \"#utility.yul\":352:384   */\n      tag_20\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":347:350   */\n      dup3\n        /* \"#utility.yul\":340:385   */\n      mstore\n        /* \"#utility.yul\":249:391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":397:651   */\n    tag_11:\n        /* \"#utility.yul\":506:510   */\n      0x00\n        /* \"#utility.yul\":544:546   */\n      0x20\n        /* \"#utility.yul\":533:542   */\n      dup3\n        /* \"#utility.yul\":529:547   */\n      add\n        /* \"#utility.yul\":521:547   */\n      swap1\n      pop\n        /* \"#utility.yul\":557:644   */\n      tag_29\n        /* \"#utility.yul\":641:642   */\n      0x00\n        /* \"#utility.yul\":630:639   */\n      dup4\n        /* \"#utility.yul\":626:643   */\n      add\n        /* \"#utility.yul\":617:623   */\n      dup5\n        /* \"#utility.yul\":557:644   */\n      tag_21\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":397:651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ac973d496ef15394bd651cf60617ff76d415cf294f25c1b5fe64cbdb1fc9c88b64736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052735b38da6a701c568545dcfcb03fcb875f56beddc46000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101f1806100676000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631a66376f1461004657806367e404ce146100505780637d4752341461006e575b600080fd5b61004e610078565b005b6100586100d1565b60405161006591906101a0565b60405180910390f35b6100766100f5565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a9081150290604051600060405180830381858888f1935050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a9081150290604051600060405180830381858888f1935050505015801561015c573d6000803e3d6000fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018a8261015f565b9050919050565b61019a8161017f565b82525050565b60006020820190506101b56000830184610191565b9291505056fea2646970667358221220ac973d496ef15394bd651cf60617ff76d415cf294f25c1b5fe64cbdb1fc9c88b64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x5B38DA6A701C568545DCFCB03FCB875F56BEDDC4 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1F1 DUP1 PUSH2 0x67 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A66376F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x67E404CE EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x7D475234 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0xF5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A DUP3 PUSH2 0x15F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x17F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC SWAP8 RETURNDATASIZE 0x49 PUSH15 0xF15394BD651CF60617FF76D415CF29 0x4F 0x25 0xC1 0xB5 INVALID PUSH5 0xCBDB1FC9C8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "65:894:0:-:0;;;118:42;80:81;;;;;;;;;;;;;;;;;;;;65:894;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@sendToTrans_31": {
									"entryPoint": 245,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sendTorec_21": {
									"entryPoint": 120,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sender_7": {
									"entryPoint": 209,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:654:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "202:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "231:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "213:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "213:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "202:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "174:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "184:7:1",
														"type": ""
													}
												],
												"src": "139:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "330:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "347:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "378:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "352:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "352:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "340:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "318:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "325:3:1",
														"type": ""
													}
												],
												"src": "249:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "533:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "544:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "521:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "617:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "641:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "626:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "557:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "557:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "483:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "495:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "506:4:1",
														"type": ""
													}
												],
												"src": "397:254:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80631a66376f1461004657806367e404ce146100505780637d4752341461006e575b600080fd5b61004e610078565b005b6100586100d1565b60405161006591906101a0565b60405180910390f35b6100766100f5565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a9081150290604051600060405180830381858888f1935050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a9081150290604051600060405180830381858888f1935050505015801561015c573d6000803e3d6000fd5b50565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018a8261015f565b9050919050565b61019a8161017f565b82525050565b60006020820190506101b56000830184610191565b9291505056fea2646970667358221220ac973d496ef15394bd651cf60617ff76d415cf294f25c1b5fe64cbdb1fc9c88b64736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1A66376F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x67E404CE EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0x7D475234 EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x78 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0xF5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0xA SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A DUP3 PUSH2 0x15F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A DUP2 PUSH2 0x17F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC SWAP8 RETURNDATASIZE 0x49 PUSH15 0xF15394BD651CF60617FF76D415CF29 0x4F 0x25 0xC1 0xB5 INVALID PUSH5 0xCBDB1FC9C8 DUP12 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "65:894:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;196:55;;;:::i;:::-;;80:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;255:61;;;:::i;:::-;;196:55;230:6;;;;;;;;;;:11;;:15;242:2;230:15;;;;;;;;;;;;;;;;;;;;;;;;196:55::o;80:81::-;;;;;;;;;;;;:::o;255:61::-;291:6;;;;;;;;;;:15;;:19;307:2;291:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;255:61::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:104::-;184:7;213:24;231:5;213:24;:::i;:::-;202:35;;139:104;;;:::o;249:142::-;352:32;378:5;352:32;:::i;:::-;347:3;340:45;249:142;;:::o;397:254::-;506:4;544:2;533:9;529:18;521:26;;557:87;641:1;630:9;626:17;617:6;557:87;:::i;:::-;397:254;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "99400",
								"executionCost": "24390",
								"totalCost": "123790"
							},
							"external": {
								"sendToTrans()": "infinite",
								"sendTorec()": "infinite",
								"sender()": "2511"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 118,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "5B38DA6A701C568545DCFCB03FCB875F56BEDDC4"
								},
								{
									"begin": 80,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 161,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 80,
									"end": 161,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 80,
									"end": 161,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 80,
									"end": 161,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 80,
									"end": 161,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 959,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 959,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 959,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 959,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 959,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac973d496ef15394bd651cf60617ff76d415cf294f25c1b5fe64cbdb1fc9c88b64736f6c63430008090033",
									".code": [
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "1A66376F"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "67E404CE"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "7D475234"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 196,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 196,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 196,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 196,
											"end": 251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 196,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 196,
											"end": 251,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 255,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 255,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 255,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 255,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 255,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 255,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 316,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 251,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 196,
											"end": 251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 230,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 230,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 230,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 230,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 230,
											"end": 241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 242,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 230,
											"end": 245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 230,
											"end": 245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 230,
											"end": 245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 196,
											"end": 251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 80,
											"end": 161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 80,
											"end": 161,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 255,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 255,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 291,
											"end": 297,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 297,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 291,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 291,
											"end": 306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 291,
											"end": 310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 184,
											"end": 191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 213,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 213,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 202,
											"end": 237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 243,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 378,
											"end": 383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 352,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 352,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 340,
											"end": 385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 249,
											"end": 391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 529,
											"end": 547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 641,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 626,
											"end": 643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 617,
											"end": 623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 557,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 557,
											"end": 644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 397,
											"end": 651,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"sendToTrans()": "7d475234",
							"sendTorec()": "1a66376f",
							"sender()": "67e404ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"sendToTrans\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendTorec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sender\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"myProject/Asoll.sol\":\"A\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"myProject/Asoll.sol\":{\"keccak256\":\"0xabb025b16bb19022b215343152bf811d74f056c57da7dcd709c0cbdceb945e28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f49a8a8122ed5bc63645c16e17e1c6f48b03bdabe8904874b6defbbc58a90e7\",\"dweb:/ipfs/QmeHEfMJg1eTbr7nZ76HTvo3pHoE7aND7ebUFmn4d9sHer\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "myProject/Asoll.sol:A",
								"label": "sender",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5878",
				"formattedMessage": "Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.\n  --> myProject/Asoll.sol:12:5:\n   |\n12 |     sender.send(10);\n   |     ^^^^^^^^^^^^^^^\n\n",
				"message": "Failure condition of 'send' ignored. Consider using 'transfer' instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 245,
					"file": "myProject/Asoll.sol",
					"start": 230
				},
				"type": "Warning"
			}
		],
		"sources": {
			"myProject/Asoll.sol": {
				"ast": {
					"absolutePath": "myProject/Asoll.sol",
					"exportedSymbols": {
						"A": [
							32
						]
					},
					"id": 33,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "A",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32
							],
							"name": "A",
							"nameLocation": "74:1:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "67e404ce",
									"id": 7,
									"mutability": "mutable",
									"name": "sender",
									"nameLocation": "103:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 32,
									"src": "80:81:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "80:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
												"id": 5,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "118:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 4,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "110:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 3,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "110:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "110:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "188:2:0",
										"statements": []
									},
									"id": 11,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "179:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "188:0:0"
									},
									"scope": 32,
									"src": "168:22:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "223:28:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "242:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 14,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "230:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "send",
														"nodeType": "MemberAccess",
														"src": "230:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "230:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "230:15:0"
											}
										]
									},
									"functionSelector": "1a66376f",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendTorec",
									"nameLocation": "205:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:0:0"
									},
									"scope": 32,
									"src": "196:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "284:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3130",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "307:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 24,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "291:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "291:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "291:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "291:19:0"
											}
										]
									},
									"functionSelector": "7d475234",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendToTrans",
									"nameLocation": "264:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "284:0:0"
									},
									"scope": 32,
									"src": "255:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 33,
							"src": "65:894:0",
							"usedErrors": []
						}
					],
					"src": "34:927:0"
				},
				"id": 0
			}
		}
	}
}